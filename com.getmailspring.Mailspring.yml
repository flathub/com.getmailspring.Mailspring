app-id: com.getmailspring.Mailspring
runtime: org.freedesktop.Platform
sdk: org.freedesktop.Sdk
runtime-version: '21.08'
base: org.electronjs.Electron2.BaseApp
base-version: '21.08'
sdk-extensions:
  - org.freedesktop.Sdk.Extension.node14
separate-locales: false
command: start-mailspring
tags: [proprietary]
finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=pulseaudio
  - --share=network
  - --device=dri
  - --filesystem=xdg-download
  - --filesystem=xdg-documents
  - --talk-name=org.freedesktop.secrets
  - --talk-name=org.freedesktop.Notifications
  - --system-talk-name=org.freedesktop.login1
  - --talk-name=org.kde.StatusNotifierWatcher
  - --talk-name=com.canonical.AppMenu.Registrar
build-options:
  append-path: /usr/lib/sdk/node14/bin
  cflags: -O2 -g
  cxxflags: -O2 -g
  env:
    NPM_CONFIG_LOGLEVEL: info
modules:
  - shared-modules/libsecret/libsecret.json
  - name: mailspring
    buildsystem: simple
    build-options:
      env:
        # Don't add ELECTRON_CACHE
        XDG_CACHE_HOME: /run/build/mailspring/flatpak-node/cache
        npm_config_cache: /run/build/mailspring/flatpak-node/npm-cache
        npm_config_nodedir: /usr/lib/sdk/node14
        npm_config_offline: 'true'
        npm_config_no_save: 'true'
        npm_config_loglevel: verbose
        # https://stackoverflow.com/questions/25146976/can-i-get-npm-gyp-to-use-ccache
        CXX: ccache g++
        CC: ccache gcc
    sources:
      - type: git
        url: https://github.com/Foundry376/Mailspring.git
        # tag: 1.9.3
        commit: ac79e44463206013179542eb57576ce93c22065b
      - type: script
        dest-filename: start-mailspring
        commands:
          - exec env TMPDIR=$XDG_CACHE_HOME zypak-wrapper /app/mailspring/mailspring -s $EXTRA_ARGS \"$@\"
      - generated-sources.json
    build-commands:
      - npm install --offline
      # Build the app; in this example the `dist` script
      # in package.json runs electron-builder
      - |
        flatpak-node/electron-builder-arch-args.sh
        npm run dist -- $ELECTRON_BUILDER_ARCH_ARGS  --linux --dir

      # Remove unneeded files
      - rm dist/linux*-unpacked/chrome-sandbox

      # Copy the resulting, unpacked directory to /app.
      - cp -r dist/linux*-unpacked /app/mailspring
      
      # Desktop File
      - install -Dm644 app/build/resources/linux/Mailspring.desktop.in /app/share/applications/$FLATPAK_ID.desktop
      - >
        desktop-file-edit --set-key=Exec --set-value='start-mailspring %U'
        --set-key=Name --set-value='MailSpring'
        --set-key=Comment --set-value='The best email app for people and teams at work'
        --set-key=StartupWMClass --set-value='Mailspring'
        --remove-category=Productivity
        --remove-category=Communication /app/share/applications/$FLATPAK_ID.desktop
      
      # Icons (Retire this at some point when an SVG is available)
      - for size in 16 32 64 128 256 512; do [[ -e "app/build/resources/linux/icons/${size}.png" ]] && install
        -Dm644 "app/build/resources/linux/icons/${size}.png" "/app/share/icons/hicolor/${size}x${size}/apps/${FLATPAK_ID}.png";
        done
      
      # Launcher
      - install -Dm755 start-mailspring /app/bin/start-mailspring
      
      # AppData
      - install -Dm644 app/build/resources/linux/mailspring.appdata.xml.in /app/share/appdata/mailspring.appdata.xml
      - sed -i 's:<%= name %>:com.getmailspring.Mailspring' /app/share/appdata/mailspring.appdata.xml
      - sed -i 's:<%= productName %>:Mailspring:g' /app/share/appdata/mailspring.appdata.xml
      - sed -i 's:<%= description %>:The best email app for people and teams at work' /app/share/appdata/mailspring.appdata.xml
      
      # Extra executables (Are they needed?)
      - install -Dm755 /usr/bin/ar -t /app/bin
      - install -Dm755 /usr/lib/$(gcc -print-multiarch)/libbfd-*.so -t /app/lib
